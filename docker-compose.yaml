version: '3.4'

services:
  serviceDiscovery:
    image: steeltoeoss/eureka-server
    container_name: serviceDiscovery
    restart: always
    ports:
      - "8761:8761"
  
  gateway:
    build:
      context: src/Gateway
      dockerfile: Dockerfile
    container_name: gateway
    restart: always
    ports:
      - "80:80"
    depends_on:
      - serviceDiscovery
    volumes:
      - ./src/Gateway/ocelot.json:/app/ocelot.json

  consumptions:
    build:
      context: src/
      dockerfile: Consumptions/Dockerfile
    restart: always
    environment:
      ConnectionStrings__Default: "Host=consumptionsDb;Port=5432;Database=postgres;Username=postgres;Password=password"
      Database__Type: "postgres"
      spring__application__name: "Consumptions"
      eureka__client__serviceUrl: "http://serviceDiscovery:8761/eureka/"
      eureka__client__shouldFetchRegistry: "false"
      eureka__client__shouldRegisterWithEureka: "true"
      eureka__client__validateCertificates: "false"
      eureka__instance__port: 80
      eureka__instance__InstanceId": "$${spring:application:name}"
      eureka__instance__preferIpAddress: "true"
      Kafka__UpdateConsumptionsTopic: "consumptions-update"
      Kafka__DeleteConsumptionsTopic: "consumptions-delete"
      Kafka__UpdateCarsTopic: "cars-update"
      Kafka__DeleteCarsTopic: "cars-delete"
      Kafka__ProducerSettings__BootstrapServers: "broker:29092"
      Kafka__ConsumerSettings__BootstrapServers: "broker:29092"
      Kafka__ConsumerSettings__GroupId: "cars-group"
    ports:
      - "80"
    depends_on:
      - serviceDiscovery
      - consumptionsDb
      - broker
        
  cars:
    build:
      context: src/
      dockerfile: Cars/Dockerfile
    restart: always
    environment:
      ConnectionStrings__Default: "Host=carsDb;Port=5432;Database=postgres;Username=postgres;Password=password"
      Database__Type: "postgres"
      spring__application__name: "Cars"
      eureka__client__serviceUrl: "http://serviceDiscovery:8761/eureka/"
      eureka__client__shouldFetchRegistry: "false"
      eureka__client__shouldRegisterWithEureka: "true"
      eureka__client__validateCertificates: "false"
      eureka__instance__port: 80
      eureka__instance__InstanceId": "$${spring:application:name}"
      eureka__instance__preferIpAddress: "true"
      Kafka__UpdateConsumptionsTopic: "consumptions-update"
      Kafka__DeleteConsumptionsTopic: "consumptions-delete"
      Kafka__UpdateCarsTopic: "cars-update"
      Kafka__DeleteCarsTopic: "cars-delete"
      Kafka__ProducerSettings__BootstrapServers: "broker:29092"
    ports:
      - "80"
    depends_on:
      - serviceDiscovery
      - carsDb
      - broker
  
  consumptionsDb:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: "password"
    expose:
      - "5432"
    ports:
      - "5432:5432"
  
  carsDb:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: "password"
    expose:
      - "5432"
    ports:
      - "55432:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
